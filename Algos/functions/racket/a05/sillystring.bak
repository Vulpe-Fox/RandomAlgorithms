;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-abbr-reader.ss" "lang")((modname sillystring) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;;
;;/----------------------------------\
;;    Cameron Carmichael (20881375)
;;    CS 135 Fall 2020
;;    Assignment 05, Problem 3
;;\----------------------------------/
;;

(define-struct silly-string (first middle last))
;; A SillyStringStruct is a (make-silly-string Char SillyStr Char)

;; A SillyStr is one of:
;; * empty
;; * a Char
;; * a SillyStringStruct


(check-expect (sillify "Babbage")
              (make-silly-string
               #\B
               (make-silly-string
                #\a
                (make-silly-string
                 #\b
                 #\b
                 #\a)
                #\g)
               #\e))
(check-expect (sillify "Lovelace")
              (make-silly-string
               #\L
               (make-silly-string
                #\o
                (make-silly-string
                 #\v
                 (make-silly-string
                  #\e
                  empty
                  #\l)
                 #\a)
                #\c)
               #\e))


(check-expect (unsillify
               (make-silly-string
                #\L
                (make-silly-string
                 #\o
                 (make-silly-string
                  #\v
                  (make-silly-string
                  #\e
                  empty
                  #\l)
                  #\a)
                 #\c)
                #\e))
              "Lovelace")


(check-expect (palindrome?
               (make-silly-string
                #\r
                (make-silly-string #\a #\d #\a)
                #\r)) true)
(check-expect (palindrome?
               (make-silly-string
                #\s
                (make-silly-string #\o #\n #\a)
                #\r)) false)
(check-expect (palindrome? (sillify "racecar")) true)
(check-expect (palindrome? (sillify "Koenigsegg")) false)